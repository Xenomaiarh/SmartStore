@model List<SmartStore.Models.OrderPr>
@{
    ViewBag.Title = "Order Confirm";
    Layout = "~/Views/Shared/_LayoutOrderConfirm.cshtml";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Confirm or Modify Order</title>
    <!-- Подключаем Bootstrap CSS -->
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
</head>
<body>
    <div class="container">
        <h2>Order Details</h2>

        @if (Model.Count != 0)
        {
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th>Product</th>
                        <th>Quantity</th>
                        <th>Total Price</th>
                        <th>Product Type</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var order in Model)
                    {
                        <tr id="order-row-@order.ProductId">
                            <td>@order.Product.ProductName</td>
                            <td>
                                <!-- Форма для изменения количества товара -->
                                <form id="updateQuantityForm_@order.ProductId">
                                    <input type="hidden" name="productId" value="@order.ProductId" />
                                    <input type="number" name="quantity" value="@order.QuantityOrder" min="1" />
                                </form>
                            </td>
                            <td id="total-price-@order.ProductId">MDL @order.TotalPrice.ToString()</td>
                            <td>@order.ProductType</td>
                            <td>
                                <!-- Кнопка для удаления товара -->
                                <input type="hidden" name="productId" value="@order.ProductId" />
                                <button type="button" class="delete-btn" data-product-id="@order.ProductId">Remove</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <!-- Кнопка подтверждения заказа внизу страницы -->
            <form id="orderForm">
                <button type="submit" class="btn btn-primary float-right">Confirm Order</button>
            </form>

            <!-- Блок для подсчета общей суммы товаров -->
            <div class="mt-4">
                <h4>Total Amount:</h4>
                <p id="total-amount">MDL @Model.Sum(o => o.TotalAmount).ToString();</p>
            </div>
        }
        else
        {
            <p>No orders available.</p>
        }
 
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            // Обработчик изменения количества товара
            $('input[name="quantity"]').on('change', function () {
                var productId = $(this).closest('form').find('input[name="productId"]').val();
                var quantity = $(this).val();

                // Отправляем AJAX запрос на сервер для обновления количества товара
                $.ajax({
                    url: '/Home/UpdateQuantity',
                    type: 'POST',
                    data: {
                        productId: productId,
                        quantityOrder: quantity
                    },
                    success: function (response) {
                        if (response.status) {
                            console.log(response.message);

                            if (response.orders && response.orders.length > 0) {
                                response.orders.forEach(function (order) {
                                    var row = $('#order-row-' + order.ProductId);
                                    console.log(row);
                                    if (row.length) {
                                        row.find('#total-price-' + order.ProductId).text(order.TotalPrice.toLocaleString('en-US', { style: 'currency', currency: 'MDL' }));
                                        console.log(row.find('#total-price-' + order.ProductId).text());
                                    }
                                });

                                var totalAmount = response.orders.reduce(function (sum, order) {
                                    return sum + order.TotalPrice;
                                }, 0);
                                console.log(totalAmount);
                                $('#total-amount').text(totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'MDL' }));
                            } else {
                                console.log('No orders in the response.');
                            }
                        } else {
                            alert('Ошибка при обновлении количества товара');
                        }
                    },
                    error: function () {
                        alert('Произошла ошибка при обновлении количества товара.');
                    }
                });
            });
            // Обработчик события нажатия на кнопку удаления товара
            $(document).on('click', '.delete-btn', function (e) {
                e.preventDefault();

                var productId = $(this).data('product-id');
                var rowToDelete = $(this).closest('tr');
                var totalPrice = parseFloat(rowToDelete.find('#total-price-' + productId).text().replace(/[^0-9.-]+/g, ""));

                // Отправляем AJAX запрос на сервер для удаления товара
                $.ajax({
                    url: '/Home/DeleteOrder',
                    type: 'POST',
                    data: { productId: productId },
                    success: function (response) {
                        if (response.success) {
                            rowToDelete.remove();

                            // Вычитаем стоимость удаленного товара из общей суммы
                            var totalAmount = parseFloat($('#total-amount').text().replace(/[^0-9.-]+/g, ""));
                            totalAmount -= totalPrice;
                            $('#total-amount').text(totalAmount.toLocaleString('en-US', { style: 'currency', currency: 'MDL' }));

                            alert('Товар успешно удален');
                        } else {
                            alert('Ошибка при удалении товара');
                        }
                    },
                    error: function (xhr, status, error) {
                        alert('Произошла ошибка при удалении товара: ' + error);
                    }
                });
            });


            // Обработчик отправки формы подтверждения заказа
            $('#orderForm').submit(function (e) {
                e.preventDefault();
                $.ajax({
                    type: 'POST',
                    url: '/Home/ConfirmPurchase',
                    data: $(this).serialize(),
                    success: function (response) {
                        if (response.status) {
                            $('.container').empty();
                            alert('Вы успешно купили товар!');
                            window.location.href = '/home/profile';
                        } else {
                            alert('Недостаточно средств');
                        }
                    },
                    error: function () {
                        alert('Произошла ошибка при отправке запроса.');
                    }
                });
            });
        });
    </script>




    <!-- Подключаем Bootstrap JS (необходим для работы некоторых компонентов) -->
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</body>
</html>
<style>
    .container {
        padding: 20px;
        margin-top: 20px;
    }

    .mt-4 {
        margin-top: 2rem;
    }

    .delete-btn {
        border-radius: 5px; /* Радиус закругления углов */
        background-color: #ff4c4c; /* Красный цвет фона */
        color: white; /* Белый цвет текста */
        padding: 10px 20px; /* Внутренние отступы */
        border: none; /* Убрать границу */
        cursor: pointer; /* Изменить курсор при наведении */
        font-size: 16px; /* Размер шрифта */
        transition: background-color 0.3s ease; /* Плавный переход цвета фона */
    }

        .delete-btn:hover {
            background-color: #ff1a1a; /* Более тёмный красный при наведении */
        }
</style>